{"version":3,"file":"static/js/368.6f53695f.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                allChildren.delete(key);\n                exitingChildren.delete(key);\n                // Remove this child from the present children\n                const removeIndex = presentChildren.current.findIndex((presentChild) => presentChild.key === key);\n                presentChildren.current.splice(removeIndex, 1);\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    presentChildren.current = filteredChildren;\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exitingChildren.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const canHandoff = useRef(Boolean(window.HandoffAppearAnimations));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        /**\n         * Once we've handed off animations we can delete HandoffAppearAnimations\n         * so components added after the initial render can animate changes\n         * in useEffect vs useLayoutEffect.\n         */\n        window.HandoffAppearAnimations = undefined;\n        canHandoff.current = false;\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.16.1\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.16.1\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.16.1 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","const noop = (any) => any;\n\nexport { noop };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_possibleConstructorReturn","self","call","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","result","Super","getPrototypeOf","NewTarget","this","constructor","arguments","apply","_getPrototypeOf","o","setPrototypeOf","bind","__proto__","_setPrototypeOf","p","_inherits","subClass","superClass","create","value","useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","_React$Component","_super","prevProps","element","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","children","React","PopChild","_ref","id","useId","ref","useInsertionEffect","_size$current","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","concat","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","_step","_iterator","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","done","_e","f","err","normalCompletion","didErr","step","next","_e2","_createForOfIteratorHelper","values","register","delete","undefined","forEach","_","PresenceContext","Provider","Map","getChildKey","child","AnimatePresence","_ref$initial","exitBeforeEnter","_ref$presenceAffectsL","_ref$mode","invariant","callback","forceRender","useContext","LayoutGroupContext","_useState","useState","_useState2","_slicedToArray","forcedRenderCount","setForcedRenderCount","useCallback","frame","postRender","useForceUpdate","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exitingChildren","presentChildren","allChildren","isInitialRender","updateChildLookup","clear","useEffect","map","_toConsumableArray","presentKeys","targetKeys","numPresent","indexOf","has","component","get","insertionIndex","exitingComponent","removeIndex","findIndex","presentChild","splice","cloneElement","createContext","stepsOrder","_createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","schedule","addToCurrentFrame","buffer","add","cancel","index","process","frameData","createRenderStep","processStep","stepId","processBatch","performance","now","Math","max","min","keepAlive","immediate","createRenderBatcher","requestAnimationFrame","noop","cancelFrame","MotionConfigContext","transformPagePoint","isStatic","reducedMotion","MotionContext","LazyContext","strict","isRefObject","hasOwnProperty","isVariantLabel","v","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","variants","useCreateMotionContext","_getCurrentTreeVarian","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","update","canHandoff","window","HandoffAppearAnimations","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","mount","unmount","useMotionRef","_ref2","layoutGroupId","createMotionProxy","createConfig","componentCache","_target","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","transformName","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_objectWithoutProperties","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","renderedChildren","camelToDash","str","replace","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","read","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","_definition","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","_info$values","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","absoluteTimes","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","initialGuess","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","_transition$elapsed","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","collectMotionValues","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","_ref3","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","prevIsPresent","prevPresenceContext","exitAnimation","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","maxDepth","getVariableValue","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","fallback","getPropertyValue","trimmed","resolveCSSVariables","obj","_objectDestructuringEmpty","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","valueFromInitial","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","_get","property","receiver","base","object","desc","getOwnPropertyDescriptor","SVGVisualElement","getAttribute","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig","any","useLayoutEffect"],"sourceRoot":""}